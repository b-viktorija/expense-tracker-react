{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ferdi\\\\Desktop\\\\WebDev\\\\Course\\\\Code\\\\05-react\\\\01-starting-setup\\\\src\\\\components\\\\UI\\\\Card.js\";\n//Card component which is supposed to act as a shell around other components;\n\nimport \"./Card.css\";\n\n// props is an object that holds the properties passed to the card component when we use it anywhere else in the code;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = props => {\n  //making sure any value getting added as a className actually gets added, cause out custom component doesn't recognize className as a default attribute; when creating a custom component, it only supports what you tell it to support ; If build in components support className, yours doesn't;\n\n  const classes = `card ${props.className}`;\n\n  // this recognizes className and general html attributes\n  // When you use the card component in the code and pass some content between the tags, that content becomes accessible due to props.children ;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n};\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["jsxDEV","_jsxDEV","Card","props","classes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ferdi/Desktop/WebDev/Course/Code/05-react/01-starting-setup/src/components/UI/Card.js"],"sourcesContent":["//Card component which is supposed to act as a shell around other components;\r\n\r\nimport \"./Card.css\";\r\n\r\n// props is an object that holds the properties passed to the card component when we use it anywhere else in the code;\r\nconst Card = (props) => {\r\n  //making sure any value getting added as a className actually gets added, cause out custom component doesn't recognize className as a default attribute; when creating a custom component, it only supports what you tell it to support ; If build in components support className, yours doesn't;\r\n\r\n  const classes = `card ${props.className}`;\r\n\r\n  // this recognizes className and general html attributes\r\n  // When you use the card component in the code and pass some content between the tags, that content becomes accessible due to props.children ;\r\n\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":";AAAA;;AAEA,OAAO,YAAY;;AAEnB;AAAA,SAAAA,MAAA,IAAAC,OAAA;AACA,MAAMC,IAAI,GAAIC,KAAK,IAAK;EACtB;;EAEA,MAAMC,OAAO,GAAI,QAAOD,KAAK,CAACE,SAAU,EAAC;;EAEzC;EACA;;EAEA,oBAAOJ,OAAA;IAAKI,SAAS,EAAED,OAAQ;IAAAE,QAAA,EAAEH,KAAK,CAACG;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACxD,CAAC;AAACC,EAAA,GATIT,IAAI;AAWV,eAAeA,IAAI;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}